user       root;
worker_processes  auto; # 自动分配CPU核数（nginx进程）
worker_cpu_affinity auto;
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;
worker_rlimit_nofile 65535;

events {
    worker_connections  4096; # 最大工作连接数,一般为规划的使用CPU核数*1024
    multi_accept on;
    accept_mutex on;
    use epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format http_json escape=json
    '{'
        '"time_local":"$time_local",'
        '"remote_addr_ip": "$remote_addr",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"upstream_addr": "$upstream_addr",'
        '"upstream_response_time": "$upstream_response_time",'
        '"upstream_connect_time": "$upstream_connect_time",'
        '"upstream_status": "$upstream_status",'
        '"http_x_forwarded_for":"$http_x_forwarded_for"'
    '}';

    access_log  /var/log/nginx/http-access.log  http_json buffer=32k flush=5s;

    server_tokens off;
    sendfile    on;
    tcp_nopush  on;

    # 一个keepalive 连接被闲置以后还能保持多久打开状态，单位秒（也就是长连接timeout）
    keepalive_timeout  100;
    # 客户端可以通过一个keepalive连接的请求次数
    keepalive_requests 100000;

    # FastCGI相关参数是为了改善网站性能：减少资源占用，提高访问速度
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;

    # 缓存
    client_body_buffer_size      128k;
    client_max_body_size         32m;
    client_header_buffer_size    128k;
    large_client_header_buffers  4 128k;
    output_buffers               1 128k;
    postpone_output              1460;

    # 配置http版本
    proxy_http_version 1.1;
    # 配置真实IP转发
    proxy_set_header  Host              $http_host;   
    proxy_set_header  X-Real-IP         $remote_addr; 
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_set_header  Connection ""; # 配合keepalive
  
    # 配置缓存大小，关闭磁盘缓存读写减少I/O
    proxy_buffering            on;
    proxy_buffer_size          32k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小
    proxy_buffers              512 4k;
    proxy_busy_buffers_size    128k; #高负荷下缓冲大小（proxy_buffers*2）
    proxy_temp_file_write_size 512k; #设定缓存文件大小，大于这个值，将从upstream服务器传
    proxy_cache_lock           on;
    proxy_cache_lock_timeout   200ms;
    proxy_temp_path            /etc/nginx/proxf_temp;
    proxy_cache_path           /etc/nginx/proxf_cache levels=1:2 keys_zone=my_cache:100m max_size=300m inactive=1d;
    proxy_max_temp_file_size   0;
    proxy_connect_timeout      30;
    proxy_read_timeout         5m;

    client_header_timeout      3m;
    client_body_timeout        3m;
    send_timeout               3m;

    # 配置代理服务器 Http 状态缓存时间
    proxy_cache_valid          200 302 10m;
    proxy_cache_valid          301 1h;
    proxy_cache_valid          any 1m;

    # 优化网络传输数据包
    gzip              on;
    gzip_min_length   1k;
    gzip_buffers 16   16k;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_comp_level   3;
    gzip_types        text/plain text/css application/json application/x-javascript text/javascript text/xml application/xml;
    gzip_vary         on;
    gzip_disable      "MSIE [1-6]\.(?!.*SV1)";

    open_file_cache max=102400 inactive=20s;
    open_file_cache_valid 80s;
    open_file_cache_min_uses 1;

    include /etc/nginx/conf.d/*.conf;
}

stream {
    log_format tcp_json escape=json
    '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"protocol ":"$protocol ",'
        '"status": "$status",'
        '"bytes_sent":"$bytes_sent",'
        '"bytes_received":"$bytes_received",'
        '"session_time":"$session_time",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_session_time":"$upstream_session_time",'
        '"upstream_bytes_sent": "$upstream_bytes_sent",'
        '"upstream_bytes_received": "$upstream_bytes_received",'
        '"upstream_connect_time": "$upstream_connect_time"'
    '}';

    access_log /var/log/nginx/tcp-access.log tcp_json buffer=32k flush=5s;

    include /etc/nginx/stream.d/*.conf;
}
